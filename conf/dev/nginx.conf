upstream {{ project_name }}dev {
    server unix:/var/tmp/{{ project_name }}dev.sock fail_timeout=0;
    # server 192.168.0.7:8000 fail_timeout=0;
}

server {
    listen 80;
    server_name dev.{{ project_name }}.com;

    # listen 666 ssl default;
    # ssl_certificate /srv/ssl/{{ project_name }}dev.pem;
    # ssl_certificate_key /srv/ssl/{{ project_name }}dev.key;

    access_log /var/log/nginx/dev.{{ project_name }}.com_access.log;
    error_log /var/log/nginx/dev.{{ project_name }}.com_error.log info;

    rewrite ^/static/(.*) /static/collected/$1;

    location ^~ /static/collected {
        root /projects/{{ project_name }}dev/{{ project_name }};
    }

    location / {
        auth_basic "Restricted";
        auth_basic_user_file /projects/{{ project_name }}dev/conf/dev/basic_auth;

        proxy_pass http://{{ project_name }}dev;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Ssl on;
        proxy_set_header Host $host:$server_port;

        # proxy_redirect:  allows you to rewrite the url appearing in the
        # Location HTTP header on redirections triggered by the backend server.
        # off - redirections are forwarded as is.
        # default - the value of the proxy_pass directive is used as the
        # hostname and the current path of the document is appended.
        proxy_redirect off;
    }

    location = /favicon.ico {
        log_not_found off;
    }

    # the maximum size of a client request body.  If the size is exceeded,
    # nginx returns a 413 (request entity too large) HTTP error.  This setting
    # helps to prevent uploading of large files.
    client_max_body_size 16M;

    # keepalive_timeout:
    # The first parameter assigns the timeout for keep-alive connections with
    # the client. The server will close connections after this time.
    #
    # The optional second parameter assigns the time value in the header
    # Keep-Alive: timeout=time of the response. This header can convince some
    # browsers to close the connection, so that the server does not have to.
    # Without this parameter, nginx does not send a Keep-Alive header
    # (though this is not what makes a connection "keep-alive").
    keepalive_timeout 60s;
}
